// <auto-generated />
using ApiWithAuth.TodoDbEntities;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace ApiWithAuth.Migrations.TodoDb
{
    [DbContext(typeof(TodoDbContext))]
    [Migration("20201027103312_fixedfk")]
    partial class fixedfk
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("ApiWithAuth.TodoDbEntities.Day", b =>
                {
                    b.Property<int>("DayId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("NameOfDay")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TodoTaskId")
                        .HasColumnType("int");

                    b.HasKey("DayId");

                    b.ToTable("Days");
                });

            modelBuilder.Entity("ApiWithAuth.TodoDbEntities.TodoTask", b =>
                {
                    b.Property<int>("TodoTaskId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("DayId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsCompleted")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("TodoTaskId");

                    b.HasIndex("DayId");

                    b.ToTable("TodoTasks");
                });

            modelBuilder.Entity("ApiWithAuth.TodoDbEntities.TodoTask", b =>
                {
                    b.HasOne("ApiWithAuth.TodoDbEntities.Day", "Day")
                        .WithMany("Tasks")
                        .HasForeignKey("DayId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}

// <auto-generated />
using Infrastructure.Database;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Infrastructure.Migrations.TodoDb
{
    [DbContext(typeof(TodoDbContext))]
    [Migration("20210608082256_initialcreate1")]
    partial class initialcreate1
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.6")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Infrastructure.Database.Entities.Day", b =>
                {
                    b.Property<int>("DayId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("NameOfDay")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("DayId");

                    b.ToTable("Days");

                    b.HasData(
                        new
                        {
                            DayId = 1,
                            NameOfDay = "Monday"
                        },
                        new
                        {
                            DayId = 2,
                            NameOfDay = "Tuesday"
                        },
                        new
                        {
                            DayId = 3,
                            NameOfDay = "Wednesday"
                        },
                        new
                        {
                            DayId = 4,
                            NameOfDay = "Thursday"
                        },
                        new
                        {
                            DayId = 5,
                            NameOfDay = "Friday"
                        },
                        new
                        {
                            DayId = 6,
                            NameOfDay = "Saturday"
                        },
                        new
                        {
                            DayId = 7,
                            NameOfDay = "Sunday"
                        });
                });

            modelBuilder.Entity("Infrastructure.Database.Entities.TodoTask", b =>
                {
                    b.Property<int>("TodoTaskId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("DayId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsCompleted")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("TodoTaskId");

                    b.HasIndex("DayId");

                    b.ToTable("TodoTasks");
                });

            modelBuilder.Entity("Infrastructure.Database.Entities.TodoTask", b =>
                {
                    b.HasOne("Infrastructure.Database.Entities.Day", "Day")
                        .WithMany("TodoTasks")
                        .HasForeignKey("DayId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Day");
                });

            modelBuilder.Entity("Infrastructure.Database.Entities.Day", b =>
                {
                    b.Navigation("TodoTasks");
                });
#pragma warning restore 612, 618
        }
    }
}
